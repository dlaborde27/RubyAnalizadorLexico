
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_RESERVED ARRAY ASSIGN BACKSLASH BEGIN BOOLEAN BREAK CALL CASE CASE_EQUAL CHOMP CLASS CLASS_VARIABLE COLON COMMA CONSTANT DEF DEFINED DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE_QUOTE ELSE ELSIF END EQUAL EXPONENT EXPONENT_ASSIGN FLOAT FOR GETS GLOBAL_VARIABLE GREATER_THAN GREATER_THAN_EQUAL HASH IF IN INSTANCE_VARIABLE INTEGER LEFT_COR LEFT_PAR LESS_THAN LESS_THAN_EQUAL LOCAL_VARIABLE MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTIPLY MULTIPLY_ASSIGN NEW NEWLINE NIL NOT NOT_EQUAL OR OR_RESERVED PERCENT_W PIPE PLUS PLUS_ASSIGN PROC PUTS RANGE_EX RANGE_IN REDO RETURN RIGHT_COR RIGHT_PAR SELF SET SPACE SPACESHIP STRING SYMBOL TAB THEN TO_F TO_I UNLESS UNTIL WHEN WHILE codigo : puts\n               | gets\n               | estructura_datos\n               | estructura_control\n               | llamada_metodo\n               | declaracion_variable\n               | almacenar_resultado_condicional\n               | declaracion_estructura_datos\n               | condiciones_con_conectores  estructura_datos : array\n                         | variable_arreglo\n                         | acceder_arreglo  estructura_control : if_statement  declaracion_variable : variable ASSIGN value  almacenar_resultado_condicional : variable ASSIGN condiciones  declaracion_estructura_datos :  variable_arreglo  condiciones_con_conectores : condiciones conectores condiciones  llamada_metodo : variable LEFT_PAR values RIGHT_PAR\n                       | variable LEFT_PAR RIGHT_PAR  value : variable\n              | numero\n              | STRING\n              | NIL\n              | SYMBOL  values_space : value\n                     | value SPACE values_space  values : value\n               | value COMMA values  variable : LOCAL_VARIABLE\n                 | INSTANCE_VARIABLE\n                 | CLASS_VARIABLE\n                 | GLOBAL_VARIABLE\n                 | CONSTANT  numero : FLOAT\n               | INTEGER  gets : GETS DOT CHOMP DOT TO_F\n             | GETS DOT CHOMP  puts : PUTS values  array : array_explicito\n              | array_implicito\n              | array_creacion\n              | array_new  array_explicito : LEFT_COR values RIGHT_COR\n                        | LEFT_COR RIGHT_COR  array_implicito : PERCENT_W LEFT_COR values_space RIGHT_COR\n                        | PERCENT_W LEFT_COR RIGHT_COR  array_creacion : ARRAY LEFT_PAR array_explicito RIGHT_PAR  array_new : ARRAY DOT NEW\n                  | ARRAY DOT NEW LEFT_PAR INTEGER RIGHT_PAR\n                  | ARRAY DOT NEW LEFT_PAR INTEGER COMMA values RIGHT_PAR  variable_arreglo : variable\n                         | variable ASSIGN array  acceder_arreglo : variable_arreglo LEFT_COR INTEGER RIGHT_COR  if_statement : IF condiciones NEWLINE codigo END\n                     | IF condiciones NEWLINE codigo else_statement END  else_statement : ELSE NEWLINE codigo  condiciones : condicion\n                    | condiciones conectores condiciones  condicion : numero operador_comparacion numero\n                  | variable operador_comparacion numero\n                  | numero operador_comparacion variable  conectores : AND\n                   | OR\n                   | AND_RESERVED\n                   | OR_RESERVED  operador_comparacion : CASE_EQUAL\n                             | EQUAL\n                             | GREATER_THAN\n                             | GREATER_THAN_EQUAL\n                             | LESS_THAN\n                             | LESS_THAN_EQUAL\n                             | NOT_EQUAL\n                             | SPACESHIP '
    
_lr_action_items = {'PUTS':([0,82,108,],[11,11,11,]),'GETS':([0,82,108,],[12,12,12,]),'IF':([0,82,108,],[25,25,25,]),'LOCAL_VARIABLE':([0,11,23,25,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,69,82,83,98,108,110,],[26,26,26,26,26,26,-66,-67,-68,-69,-70,-71,-72,-73,26,-62,-63,-64,-65,26,26,26,26,26,26,26,26,]),'INSTANCE_VARIABLE':([0,11,23,25,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,69,82,83,98,108,110,],[27,27,27,27,27,27,-66,-67,-68,-69,-70,-71,-72,-73,27,-62,-63,-64,-65,27,27,27,27,27,27,27,27,]),'CLASS_VARIABLE':([0,11,23,25,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,69,82,83,98,108,110,],[28,28,28,28,28,28,-66,-67,-68,-69,-70,-71,-72,-73,28,-62,-63,-64,-65,28,28,28,28,28,28,28,28,]),'GLOBAL_VARIABLE':([0,11,23,25,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,69,82,83,98,108,110,],[29,29,29,29,29,29,-66,-67,-68,-69,-70,-71,-72,-73,29,-62,-63,-64,-65,29,29,29,29,29,29,29,29,]),'CONSTANT':([0,11,23,25,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,69,82,83,98,108,110,],[30,30,30,30,30,30,-66,-67,-68,-69,-70,-71,-72,-73,30,-62,-63,-64,-65,30,30,30,30,30,30,30,30,]),'LEFT_COR':([0,14,17,19,20,21,22,26,27,28,29,30,32,46,62,66,77,81,82,85,88,97,99,108,109,113,],[23,44,-51,-39,-40,-41,-42,-29,-30,-31,-32,-33,65,23,-44,23,-52,-43,23,-46,-48,-45,-47,23,-49,-50,]),'PERCENT_W':([0,46,82,108,],[32,32,32,32,]),'ARRAY':([0,46,82,108,],[33,33,33,33,]),'FLOAT':([0,11,23,25,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,69,82,83,98,108,110,],[35,35,35,35,35,35,35,-66,-67,-68,-69,-70,-71,-72,-73,35,-62,-63,-64,-65,35,35,35,35,35,35,35,35,]),'INTEGER':([0,11,23,25,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,69,82,83,98,100,108,110,],[24,24,24,24,71,24,24,24,-66,-67,-68,-69,-70,-71,-72,-73,24,-62,-63,-64,-65,24,24,24,24,24,24,106,24,24,]),'$end':([1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,24,26,27,28,29,30,31,35,36,37,38,39,40,41,42,62,70,73,74,75,76,77,78,79,80,81,85,88,89,90,91,93,94,96,97,99,101,102,107,109,113,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-51,-39,-40,-41,-42,-35,-29,-30,-31,-32,-33,-57,-34,-38,-27,-20,-21,-22,-23,-24,-44,-37,-19,-20,-14,-15,-52,-21,-60,-17,-43,-46,-48,-59,-61,-28,-53,-18,-58,-45,-47,-36,-54,-55,-49,-50,]),'END':([2,3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,24,26,27,28,29,30,31,35,36,37,38,39,40,41,42,62,70,73,74,75,76,77,78,79,80,81,85,88,89,90,91,93,94,95,96,97,99,101,102,103,107,109,111,113,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-51,-39,-40,-41,-42,-35,-29,-30,-31,-32,-33,-57,-34,-38,-27,-20,-21,-22,-23,-24,-44,-37,-19,-20,-14,-15,-52,-21,-60,-17,-43,-46,-48,-59,-61,-28,-53,-18,102,-58,-45,-47,-36,-54,107,-55,-49,-56,-50,]),'ELSE':([2,3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,24,26,27,28,29,30,31,35,36,37,38,39,40,41,42,62,70,73,74,75,76,77,78,79,80,81,85,88,89,90,91,93,94,95,96,97,99,101,102,107,109,113,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-51,-39,-40,-41,-42,-35,-29,-30,-31,-32,-33,-57,-34,-38,-27,-20,-21,-22,-23,-24,-44,-37,-19,-20,-14,-15,-52,-21,-60,-17,-43,-46,-48,-59,-61,-28,-53,-18,104,-58,-45,-47,-36,-54,-55,-49,-50,]),'STRING':([11,23,45,46,65,69,98,110,],[40,40,40,40,40,40,40,40,]),'NIL':([11,23,45,46,65,69,98,110,],[41,41,41,41,41,41,41,41,]),'SYMBOL':([11,23,45,46,65,69,98,110,],[42,42,42,42,42,42,42,42,]),'DOT':([12,33,70,],[43,67,92,]),'LEFT_PAR':([17,26,27,28,29,30,33,88,],[45,-29,-30,-31,-32,-33,66,100,]),'ASSIGN':([17,26,27,28,29,30,],[46,-29,-30,-31,-32,-33,]),'CASE_EQUAL':([17,24,26,27,28,29,30,34,35,64,74,78,],[48,-35,-29,-30,-31,-32,-33,48,-34,48,48,48,]),'EQUAL':([17,24,26,27,28,29,30,34,35,64,74,78,],[49,-35,-29,-30,-31,-32,-33,49,-34,49,49,49,]),'GREATER_THAN':([17,24,26,27,28,29,30,34,35,64,74,78,],[50,-35,-29,-30,-31,-32,-33,50,-34,50,50,50,]),'GREATER_THAN_EQUAL':([17,24,26,27,28,29,30,34,35,64,74,78,],[51,-35,-29,-30,-31,-32,-33,51,-34,51,51,51,]),'LESS_THAN':([17,24,26,27,28,29,30,34,35,64,74,78,],[52,-35,-29,-30,-31,-32,-33,52,-34,52,52,52,]),'LESS_THAN_EQUAL':([17,24,26,27,28,29,30,34,35,64,74,78,],[53,-35,-29,-30,-31,-32,-33,53,-34,53,53,53,]),'NOT_EQUAL':([17,24,26,27,28,29,30,34,35,64,74,78,],[54,-35,-29,-30,-31,-32,-33,54,-34,54,54,54,]),'SPACESHIP':([17,24,26,27,28,29,30,34,35,64,74,78,],[55,-35,-29,-30,-31,-32,-33,55,-34,55,55,55,]),'AND':([18,24,26,27,28,29,30,31,35,63,76,79,80,89,90,96,],[57,-35,-29,-30,-31,-32,-33,-57,-34,57,57,-60,57,-59,-61,57,]),'OR':([18,24,26,27,28,29,30,31,35,63,76,79,80,89,90,96,],[58,-35,-29,-30,-31,-32,-33,-57,-34,58,58,-60,58,-59,-61,58,]),'AND_RESERVED':([18,24,26,27,28,29,30,31,35,63,76,79,80,89,90,96,],[59,-35,-29,-30,-31,-32,-33,-57,-34,59,59,-60,59,-59,-61,59,]),'OR_RESERVED':([18,24,26,27,28,29,30,31,35,63,76,79,80,89,90,96,],[60,-35,-29,-30,-31,-32,-33,-57,-34,60,60,-60,60,-59,-61,60,]),'RIGHT_COR':([23,24,26,27,28,29,30,35,37,38,39,40,41,42,61,65,71,84,86,91,105,],[62,-35,-29,-30,-31,-32,-33,-34,-27,-20,-21,-22,-23,-24,81,85,93,97,-25,-28,-26,]),'COMMA':([24,26,27,28,29,30,35,37,38,39,40,41,42,106,],[-35,-29,-30,-31,-32,-33,-34,69,-20,-21,-22,-23,-24,110,]),'RIGHT_PAR':([24,26,27,28,29,30,35,37,38,39,40,41,42,45,62,72,81,87,91,106,112,],[-35,-29,-30,-31,-32,-33,-34,-27,-20,-21,-22,-23,-24,73,-44,94,-43,99,-28,109,113,]),'NEWLINE':([24,26,27,28,29,30,31,35,63,79,89,90,96,104,],[-35,-29,-30,-31,-32,-33,-57,-34,82,-60,-59,-61,-58,108,]),'SPACE':([24,26,27,28,29,30,35,38,39,40,41,42,86,],[-35,-29,-30,-31,-32,-33,-34,-20,-21,-22,-23,-24,98,]),'CHOMP':([43,],[70,]),'NEW':([67,],[88,]),'TO_F':([92,],[101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,82,108,],[1,95,111,]),'puts':([0,82,108,],[2,2,2,]),'gets':([0,82,108,],[3,3,3,]),'estructura_datos':([0,82,108,],[4,4,4,]),'estructura_control':([0,82,108,],[5,5,5,]),'llamada_metodo':([0,82,108,],[6,6,6,]),'declaracion_variable':([0,82,108,],[7,7,7,]),'almacenar_resultado_condicional':([0,82,108,],[8,8,8,]),'declaracion_estructura_datos':([0,82,108,],[9,9,9,]),'condiciones_con_conectores':([0,82,108,],[10,10,10,]),'array':([0,46,82,108,],[13,77,13,13,]),'variable_arreglo':([0,82,108,],[14,14,14,]),'acceder_arreglo':([0,82,108,],[15,15,15,]),'if_statement':([0,82,108,],[16,16,16,]),'variable':([0,11,23,25,45,46,56,65,68,69,82,83,98,108,110,],[17,38,38,64,38,74,64,38,90,38,17,64,38,17,38,]),'condiciones':([0,25,46,56,82,83,108,],[18,63,76,80,18,96,18,]),'array_explicito':([0,46,66,82,108,],[19,19,87,19,19,]),'array_implicito':([0,46,82,108,],[20,20,20,20,]),'array_creacion':([0,46,82,108,],[21,21,21,21,]),'array_new':([0,46,82,108,],[22,22,22,22,]),'condicion':([0,25,46,56,82,83,108,],[31,31,31,31,31,31,31,]),'numero':([0,11,23,25,45,46,47,56,65,68,69,82,83,98,108,110,],[34,39,39,34,39,78,79,34,39,89,39,34,34,39,34,39,]),'values':([11,23,45,69,110,],[36,61,72,91,112,]),'value':([11,23,45,46,65,69,98,110,],[37,37,37,75,86,37,86,37,]),'operador_comparacion':([17,34,64,74,78,],[47,68,47,47,68,]),'conectores':([18,63,76,80,96,],[56,83,83,83,83,]),'values_space':([65,98,],[84,105,]),'else_statement':([95,],[103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> puts','codigo',1,'p_codigo','analizador_sintactico.py',9),
  ('codigo -> gets','codigo',1,'p_codigo','analizador_sintactico.py',10),
  ('codigo -> estructura_datos','codigo',1,'p_codigo','analizador_sintactico.py',11),
  ('codigo -> estructura_control','codigo',1,'p_codigo','analizador_sintactico.py',12),
  ('codigo -> llamada_metodo','codigo',1,'p_codigo','analizador_sintactico.py',13),
  ('codigo -> declaracion_variable','codigo',1,'p_codigo','analizador_sintactico.py',14),
  ('codigo -> almacenar_resultado_condicional','codigo',1,'p_codigo','analizador_sintactico.py',15),
  ('codigo -> declaracion_estructura_datos','codigo',1,'p_codigo','analizador_sintactico.py',16),
  ('codigo -> condiciones_con_conectores','codigo',1,'p_codigo','analizador_sintactico.py',17),
  ('estructura_datos -> array','estructura_datos',1,'p_estructura_datos','analizador_sintactico.py',20),
  ('estructura_datos -> variable_arreglo','estructura_datos',1,'p_estructura_datos','analizador_sintactico.py',21),
  ('estructura_datos -> acceder_arreglo','estructura_datos',1,'p_estructura_datos','analizador_sintactico.py',22),
  ('estructura_control -> if_statement','estructura_control',1,'p_estructura_control','analizador_sintactico.py',25),
  ('declaracion_variable -> variable ASSIGN value','declaracion_variable',3,'p_declaracion_variable','analizador_sintactico.py',30),
  ('almacenar_resultado_condicional -> variable ASSIGN condiciones','almacenar_resultado_condicional',3,'p_almacenar_resultado_condicional','analizador_sintactico.py',33),
  ('declaracion_estructura_datos -> variable_arreglo','declaracion_estructura_datos',1,'p_declaracion_estructura_datos','analizador_sintactico.py',36),
  ('condiciones_con_conectores -> condiciones conectores condiciones','condiciones_con_conectores',3,'p_condiciones_con_conectores','analizador_sintactico.py',39),
  ('llamada_metodo -> variable LEFT_PAR values RIGHT_PAR','llamada_metodo',4,'p_llamada_metodo','analizador_sintactico.py',44),
  ('llamada_metodo -> variable LEFT_PAR RIGHT_PAR','llamada_metodo',3,'p_llamada_metodo','analizador_sintactico.py',45),
  ('value -> variable','value',1,'p_value','analizador_sintactico.py',48),
  ('value -> numero','value',1,'p_value','analizador_sintactico.py',49),
  ('value -> STRING','value',1,'p_value','analizador_sintactico.py',50),
  ('value -> NIL','value',1,'p_value','analizador_sintactico.py',51),
  ('value -> SYMBOL','value',1,'p_value','analizador_sintactico.py',52),
  ('values_space -> value','values_space',1,'p_values_space','analizador_sintactico.py',55),
  ('values_space -> value SPACE values_space','values_space',3,'p_values_space','analizador_sintactico.py',56),
  ('values -> value','values',1,'p_values','analizador_sintactico.py',59),
  ('values -> value COMMA values','values',3,'p_values','analizador_sintactico.py',60),
  ('variable -> LOCAL_VARIABLE','variable',1,'p_variable','analizador_sintactico.py',63),
  ('variable -> INSTANCE_VARIABLE','variable',1,'p_variable','analizador_sintactico.py',64),
  ('variable -> CLASS_VARIABLE','variable',1,'p_variable','analizador_sintactico.py',65),
  ('variable -> GLOBAL_VARIABLE','variable',1,'p_variable','analizador_sintactico.py',66),
  ('variable -> CONSTANT','variable',1,'p_variable','analizador_sintactico.py',67),
  ('numero -> FLOAT','numero',1,'p_numero','analizador_sintactico.py',70),
  ('numero -> INTEGER','numero',1,'p_numero','analizador_sintactico.py',71),
  ('gets -> GETS DOT CHOMP DOT TO_F','gets',5,'p_gets','analizador_sintactico.py',74),
  ('gets -> GETS DOT CHOMP','gets',3,'p_gets','analizador_sintactico.py',75),
  ('puts -> PUTS values','puts',2,'p_puts','analizador_sintactico.py',78),
  ('array -> array_explicito','array',1,'p_array','analizador_sintactico.py',83),
  ('array -> array_implicito','array',1,'p_array','analizador_sintactico.py',84),
  ('array -> array_creacion','array',1,'p_array','analizador_sintactico.py',85),
  ('array -> array_new','array',1,'p_array','analizador_sintactico.py',86),
  ('array_explicito -> LEFT_COR values RIGHT_COR','array_explicito',3,'p_array_explicito','analizador_sintactico.py',89),
  ('array_explicito -> LEFT_COR RIGHT_COR','array_explicito',2,'p_array_explicito','analizador_sintactico.py',90),
  ('array_implicito -> PERCENT_W LEFT_COR values_space RIGHT_COR','array_implicito',4,'p_array_implicito','analizador_sintactico.py',93),
  ('array_implicito -> PERCENT_W LEFT_COR RIGHT_COR','array_implicito',3,'p_array_implicito','analizador_sintactico.py',94),
  ('array_creacion -> ARRAY LEFT_PAR array_explicito RIGHT_PAR','array_creacion',4,'p_array_creacion','analizador_sintactico.py',97),
  ('array_new -> ARRAY DOT NEW','array_new',3,'p_array_new','analizador_sintactico.py',100),
  ('array_new -> ARRAY DOT NEW LEFT_PAR INTEGER RIGHT_PAR','array_new',6,'p_array_new','analizador_sintactico.py',101),
  ('array_new -> ARRAY DOT NEW LEFT_PAR INTEGER COMMA values RIGHT_PAR','array_new',8,'p_array_new','analizador_sintactico.py',102),
  ('variable_arreglo -> variable','variable_arreglo',1,'p_variable_arreglo','analizador_sintactico.py',105),
  ('variable_arreglo -> variable ASSIGN array','variable_arreglo',3,'p_variable_arreglo','analizador_sintactico.py',106),
  ('acceder_arreglo -> variable_arreglo LEFT_COR INTEGER RIGHT_COR','acceder_arreglo',4,'p_acceder_arreglo','analizador_sintactico.py',109),
  ('if_statement -> IF condiciones NEWLINE codigo END','if_statement',5,'p_if_statement','analizador_sintactico.py',114),
  ('if_statement -> IF condiciones NEWLINE codigo else_statement END','if_statement',6,'p_if_statement','analizador_sintactico.py',115),
  ('else_statement -> ELSE NEWLINE codigo','else_statement',3,'p_else_statement','analizador_sintactico.py',118),
  ('condiciones -> condicion','condiciones',1,'p_condiciones','analizador_sintactico.py',121),
  ('condiciones -> condiciones conectores condiciones','condiciones',3,'p_condiciones','analizador_sintactico.py',122),
  ('condicion -> numero operador_comparacion numero','condicion',3,'p_condicion','analizador_sintactico.py',125),
  ('condicion -> variable operador_comparacion numero','condicion',3,'p_condicion','analizador_sintactico.py',126),
  ('condicion -> numero operador_comparacion variable','condicion',3,'p_condicion','analizador_sintactico.py',127),
  ('conectores -> AND','conectores',1,'p_conectores','analizador_sintactico.py',130),
  ('conectores -> OR','conectores',1,'p_conectores','analizador_sintactico.py',131),
  ('conectores -> AND_RESERVED','conectores',1,'p_conectores','analizador_sintactico.py',132),
  ('conectores -> OR_RESERVED','conectores',1,'p_conectores','analizador_sintactico.py',133),
  ('operador_comparacion -> CASE_EQUAL','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',136),
  ('operador_comparacion -> EQUAL','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',137),
  ('operador_comparacion -> GREATER_THAN','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',138),
  ('operador_comparacion -> GREATER_THAN_EQUAL','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',139),
  ('operador_comparacion -> LESS_THAN','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',140),
  ('operador_comparacion -> LESS_THAN_EQUAL','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',141),
  ('operador_comparacion -> NOT_EQUAL','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',142),
  ('operador_comparacion -> SPACESHIP','operador_comparacion',1,'p_operador_comparacion','analizador_sintactico.py',143),
]
